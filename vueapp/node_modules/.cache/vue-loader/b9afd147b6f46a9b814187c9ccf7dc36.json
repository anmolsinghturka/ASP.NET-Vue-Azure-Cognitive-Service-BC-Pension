{"remainingRequest":"C:\\Users\\UserPC\\Documents\\My-Docs\\BC-Pension-Form-Recognizer\\Vue-ASP.NET-Azure-Form_Recognizer - Copy\\vueapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\UserPC\\Documents\\My-Docs\\BC-Pension-Form-Recognizer\\Vue-ASP.NET-Azure-Form_Recognizer - Copy\\vueapp\\src\\pages\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\UserPC\\Documents\\My-Docs\\BC-Pension-Form-Recognizer\\Vue-ASP.NET-Azure-Form_Recognizer - Copy\\vueapp\\src\\pages\\Dashboard.vue","mtime":1677878396222},{"path":"C:\\Users\\UserPC\\Documents\\My-Docs\\BC-Pension-Form-Recognizer\\Vue-ASP.NET-Azure-Form_Recognizer - Copy\\vueapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678130146804},{"path":"C:\\Users\\UserPC\\Documents\\My-Docs\\BC-Pension-Form-Recognizer\\Vue-ASP.NET-Azure-Form_Recognizer - Copy\\vueapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1678130146624},{"path":"C:\\Users\\UserPC\\Documents\\My-Docs\\BC-Pension-Form-Recognizer\\Vue-ASP.NET-Azure-Form_Recognizer - Copy\\vueapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678130146804},{"path":"C:\\Users\\UserPC\\Documents\\My-Docs\\BC-Pension-Form-Recognizer\\Vue-ASP.NET-Azure-Form_Recognizer - Copy\\vueapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1678130167923}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1wb3J0IExpbmVDaGFydCBmcm9tICdAL2NvbXBvbmVudHMvQ2hhcnRzL0xpbmVDaGFydCc7CiAgaW1wb3J0IEJhckNoYXJ0IGZyb20gJ0AvY29tcG9uZW50cy9DaGFydHMvQmFyQ2hhcnQnOwogIGltcG9ydCAqIGFzIGNoYXJ0Q29uZmlncyBmcm9tICdAL2NvbXBvbmVudHMvQ2hhcnRzL2NvbmZpZyc7CiAgaW1wb3J0IFRhc2tMaXN0IGZyb20gJy4vRGFzaGJvYXJkL1Rhc2tMaXN0JzsKICBpbXBvcnQgVXNlclRhYmxlIGZyb20gJy4vRGFzaGJvYXJkL1VzZXJUYWJsZSc7CiAgaW1wb3J0IGNvbmZpZyBmcm9tICdAL2NvbmZpZyc7CgogIGV4cG9ydCBkZWZhdWx0IHsKICAgIGNvbXBvbmVudHM6IHsKICAgICAgTGluZUNoYXJ0LAogICAgICBCYXJDaGFydCwKICAgICAgVGFza0xpc3QsCiAgICAgIFVzZXJUYWJsZQogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgYmlnTGluZUNoYXJ0OiB7CiAgICAgICAgICBhbGxEYXRhOiBbCiAgICAgICAgICAgIFsxMDAsIDcwLCA5MCwgNzAsIDg1LCA2MCwgNzUsIDYwLCA5MCwgODAsIDExMCwgMTAwXSwKICAgICAgICAgICAgWzgwLCAxMjAsIDEwNSwgMTEwLCA5NSwgMTA1LCA5MCwgMTAwLCA4MCwgOTUsIDcwLCAxMjBdLAogICAgICAgICAgICBbNjAsIDgwLCA2NSwgMTMwLCA4MCwgMTA1LCA5MCwgMTMwLCA3MCwgMTE1LCA2MCwgMTMwXQogICAgICAgICAgXSwKICAgICAgICAgIGFjdGl2ZUluZGV4OiAwLAogICAgICAgICAgY2hhcnREYXRhOiB7CiAgICAgICAgICAgIGRhdGFzZXRzOiBbeyB9XSwKICAgICAgICAgICAgbGFiZWxzOiBbJ0pBTicsICdGRUInLCAnTUFSJywgJ0FQUicsICdNQVknLCAnSlVOJywgJ0pVTCcsICdBVUcnLCAnU0VQJywgJ09DVCcsICdOT1YnLCAnREVDJ10sCiAgICAgICAgICB9LAogICAgICAgICAgZXh0cmFPcHRpb25zOiBjaGFydENvbmZpZ3MucHVycGxlQ2hhcnRPcHRpb25zLAogICAgICAgICAgZ3JhZGllbnRDb2xvcnM6IGNvbmZpZy5jb2xvcnMucHJpbWFyeUdyYWRpZW50LAogICAgICAgICAgZ3JhZGllbnRTdG9wczogWzEsIDAuNCwgMF0sCiAgICAgICAgICBjYXRlZ29yaWVzOiBbXQogICAgICAgIH0sCiAgICAgICAgcHVycGxlTGluZUNoYXJ0OiB7CiAgICAgICAgICBleHRyYU9wdGlvbnM6IGNoYXJ0Q29uZmlncy5wdXJwbGVDaGFydE9wdGlvbnMsCiAgICAgICAgICBjaGFydERhdGE6IHsKICAgICAgICAgICAgbGFiZWxzOiBbJ0pVTCcsICdBVUcnLCAnU0VQJywgJ09DVCcsICdOT1YnLCAnREVDJ10sCiAgICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICAgIGxhYmVsOiAiRGF0YSIsCiAgICAgICAgICAgICAgZmlsbDogdHJ1ZSwKICAgICAgICAgICAgICBib3JkZXJDb2xvcjogY29uZmlnLmNvbG9ycy5wcmltYXJ5LAogICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLAogICAgICAgICAgICAgIGJvcmRlckRhc2g6IFtdLAogICAgICAgICAgICAgIGJvcmRlckRhc2hPZmZzZXQ6IDAuMCwKICAgICAgICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogY29uZmlnLmNvbG9ycy5wcmltYXJ5LAogICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwyNTUsMjU1LDApJywKICAgICAgICAgICAgICBwb2ludEhvdmVyQmFja2dyb3VuZENvbG9yOiBjb25maWcuY29sb3JzLnByaW1hcnksCiAgICAgICAgICAgICAgcG9pbnRCb3JkZXJXaWR0aDogMjAsCiAgICAgICAgICAgICAgcG9pbnRIb3ZlclJhZGl1czogNCwKICAgICAgICAgICAgICBwb2ludEhvdmVyQm9yZGVyV2lkdGg6IDE1LAogICAgICAgICAgICAgIHBvaW50UmFkaXVzOiA0LAogICAgICAgICAgICAgIGRhdGE6IFs4MCwgMTAwLCA3MCwgODAsIDEyMCwgODBdLAogICAgICAgICAgICB9XQogICAgICAgICAgfSwKICAgICAgICAgIGdyYWRpZW50Q29sb3JzOiBjb25maWcuY29sb3JzLnByaW1hcnlHcmFkaWVudCwKICAgICAgICAgIGdyYWRpZW50U3RvcHM6IFsxLCAwLjIsIDBdLAogICAgICAgIH0sCiAgICAgICAgZ3JlZW5MaW5lQ2hhcnQ6IHsKICAgICAgICAgIGV4dHJhT3B0aW9uczogY2hhcnRDb25maWdzLmdyZWVuQ2hhcnRPcHRpb25zLAogICAgICAgICAgY2hhcnREYXRhOiB7CiAgICAgICAgICAgIGxhYmVsczogWydKVUwnLCAnQVVHJywgJ1NFUCcsICdPQ1QnLCAnTk9WJ10sCiAgICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICAgIGxhYmVsOiAiTXkgRmlyc3QgZGF0YXNldCIsCiAgICAgICAgICAgICAgZmlsbDogdHJ1ZSwKICAgICAgICAgICAgICBib3JkZXJDb2xvcjogY29uZmlnLmNvbG9ycy5kYW5nZXIsCiAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsCiAgICAgICAgICAgICAgYm9yZGVyRGFzaDogW10sCiAgICAgICAgICAgICAgYm9yZGVyRGFzaE9mZnNldDogMC4wLAogICAgICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiBjb25maWcuY29sb3JzLmRhbmdlciwKICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAncmdiYSgyNTUsMjU1LDI1NSwwKScsCiAgICAgICAgICAgICAgcG9pbnRIb3ZlckJhY2tncm91bmRDb2xvcjogY29uZmlnLmNvbG9ycy5kYW5nZXIsCiAgICAgICAgICAgICAgcG9pbnRCb3JkZXJXaWR0aDogMjAsCiAgICAgICAgICAgICAgcG9pbnRIb3ZlclJhZGl1czogNCwKICAgICAgICAgICAgICBwb2ludEhvdmVyQm9yZGVyV2lkdGg6IDE1LAogICAgICAgICAgICAgIHBvaW50UmFkaXVzOiA0LAogICAgICAgICAgICAgIGRhdGE6IFs5MCwgMjcsIDYwLCAxMiwgODBdLAogICAgICAgICAgICB9XQogICAgICAgICAgfSwKICAgICAgICAgIGdyYWRpZW50Q29sb3JzOiBbJ3JnYmEoNjYsMTM0LDEyMSwwLjE1KScsICdyZ2JhKDY2LDEzNCwxMjEsMC4wKScsICdyZ2JhKDY2LDEzNCwxMjEsMCknXSwKICAgICAgICAgIGdyYWRpZW50U3RvcHM6IFsxLCAwLjQsIDBdLAogICAgICAgIH0sCiAgICAgICAgYmx1ZUJhckNoYXJ0OiB7CiAgICAgICAgICBleHRyYU9wdGlvbnM6IGNoYXJ0Q29uZmlncy5iYXJDaGFydE9wdGlvbnMsCiAgICAgICAgICBjaGFydERhdGE6IHsKICAgICAgICAgICAgbGFiZWxzOiBbJ1VTQScsICdHRVInLCAnQVVTJywgJ1VLJywgJ1JPJywgJ0JSJ10sCiAgICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICAgIGxhYmVsOiAiQ291bnRyaWVzIiwKICAgICAgICAgICAgICBmaWxsOiB0cnVlLAogICAgICAgICAgICAgIGJvcmRlckNvbG9yOiBjb25maWcuY29sb3JzLmluZm8sCiAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDIsCiAgICAgICAgICAgICAgYm9yZGVyRGFzaDogW10sCiAgICAgICAgICAgICAgYm9yZGVyRGFzaE9mZnNldDogMC4wLAogICAgICAgICAgICAgIGRhdGE6IFs1MywgMjAsIDEwLCA4MCwgMTAwLCA0NV0sCiAgICAgICAgICAgIH1dCiAgICAgICAgICB9LAogICAgICAgICAgZ3JhZGllbnRDb2xvcnM6IGNvbmZpZy5jb2xvcnMucHJpbWFyeUdyYWRpZW50LAogICAgICAgICAgZ3JhZGllbnRTdG9wczogWzEsIDAuNCwgMF0sCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgZW5hYmxlUlRMKCkgewogICAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5xdWVyeS5lbmFibGVSVEw7CiAgICAgIH0sCiAgICAgIGlzUlRMKCkgewogICAgICAgIHJldHVybiB0aGlzLiRydGwuaXNSVEw7CiAgICAgIH0sCiAgICAgIGJpZ0xpbmVDaGFydENhdGVnb3JpZXMoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHQoJ2Rhc2hib2FyZC5jaGFydENhdGVnb3JpZXMnKTsKICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgaW5pdEJpZ0NoYXJ0KGluZGV4KSB7CiAgICAgICAgbGV0IGNoYXJ0RGF0YSA9IHsKICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICBmaWxsOiB0cnVlLAogICAgICAgICAgICBib3JkZXJDb2xvcjogY29uZmlnLmNvbG9ycy5wcmltYXJ5LAogICAgICAgICAgICBib3JkZXJXaWR0aDogMiwKICAgICAgICAgICAgYm9yZGVyRGFzaDogW10sCiAgICAgICAgICAgIGJvcmRlckRhc2hPZmZzZXQ6IDAuMCwKICAgICAgICAgICAgcG9pbnRCYWNrZ3JvdW5kQ29sb3I6IGNvbmZpZy5jb2xvcnMucHJpbWFyeSwKICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogJ3JnYmEoMjU1LDI1NSwyNTUsMCknLAogICAgICAgICAgICBwb2ludEhvdmVyQmFja2dyb3VuZENvbG9yOiBjb25maWcuY29sb3JzLnByaW1hcnksCiAgICAgICAgICAgIHBvaW50Qm9yZGVyV2lkdGg6IDIwLAogICAgICAgICAgICBwb2ludEhvdmVyUmFkaXVzOiA0LAogICAgICAgICAgICBwb2ludEhvdmVyQm9yZGVyV2lkdGg6IDE1LAogICAgICAgICAgICBwb2ludFJhZGl1czogNCwKICAgICAgICAgICAgZGF0YTogdGhpcy5iaWdMaW5lQ2hhcnQuYWxsRGF0YVtpbmRleF0KICAgICAgICAgIH1dLAogICAgICAgICAgbGFiZWxzOiBbJ0pBTicsICdGRUInLCAnTUFSJywgJ0FQUicsICdNQVknLCAnSlVOJywgJ0pVTCcsICdBVUcnLCAnU0VQJywgJ09DVCcsICdOT1YnLCAnREVDJ10sCiAgICAgICAgfQogICAgICAgIHRoaXMuJHJlZnMuYmlnQ2hhcnQudXBkYXRlR3JhZGllbnRzKGNoYXJ0RGF0YSk7CiAgICAgICAgdGhpcy5iaWdMaW5lQ2hhcnQuY2hhcnREYXRhID0gY2hhcnREYXRhOwogICAgICAgIHRoaXMuYmlnTGluZUNoYXJ0LmFjdGl2ZUluZGV4ID0gaW5kZXg7CiAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICB0aGlzLmkxOG4gPSB0aGlzLiRpMThuOwogICAgICBpZiAodGhpcy5lbmFibGVSVEwpIHsKICAgICAgICB0aGlzLmkxOG4ubG9jYWxlID0gJ2FyJzsKICAgICAgICB0aGlzLiRydGwuZW5hYmxlUlRMKCk7CiAgICAgIH0KICAgICAgdGhpcy5pbml0QmlnQ2hhcnQoMCk7CiAgICB9LAogICAgYmVmb3JlRGVzdHJveSgpIHsKICAgICAgaWYgKHRoaXMuJHJ0bC5pc1JUTCkgewogICAgICAgIHRoaXMuaTE4bi5sb2NhbGUgPSAnZW4nOwogICAgICAgIHRoaXMuJHJ0bC5kaXNhYmxlUlRMKCk7CiAgICAgIH0KICAgIH0KICB9Owo="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";AAifile":"Dashboard.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <div class=\"row\">\n              <div class=\"col-sm-6\" :class=\"isRTL ? 'text-right' : 'text-left'\">\n                <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\n                <h2 class=\"card-title\">{{$t('dashboard.performance')}}</h2>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"btn-group btn-group-toggle\"\n                     :class=\"isRTL ? 'float-left' : 'float-right'\"\n                     data-toggle=\"buttons\">\n                  <label v-for=\"(option, index) in bigLineChartCategories\"\n                         :key=\"option\"\n                         class=\"btn btn-sm btn-primary btn-simple\"\n                         :class=\"{active: bigLineChart.activeIndex === index}\"\n                         :id=\"index\">\n                    <input type=\"radio\"\n                           @click=\"initBigChart(index)\"\n                           name=\"options\" autocomplete=\"off\"\n                           :checked=\"bigLineChart.activeIndex === index\">\n                    {{option}}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        ref=\"bigChart\"\n                        chart-id=\"big-line-chart\"\n                        :chart-data=\"bigLineChart.chartData\"\n                        :gradient-colors=\"bigLineChart.gradientColors\"\n                        :gradient-stops=\"bigLineChart.gradientStops\"\n                        :extra-options=\"bigLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-bell-55 text-primary \"></i> 763,215</h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        chart-id=\"purple-line-chart\"\n                        :chart-data=\"purpleLineChart.chartData\"\n                        :gradient-colors=\"purpleLineChart.gradientColors\"\n                        :gradient-stops=\"purpleLineChart.gradientStops\"\n                        :extra-options=\"purpleLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.dailySales')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-delivery-fast text-info \"></i> 3,500€</h3>\n          </template>\n          <div class=\"chart-area\">\n            <bar-chart style=\"height: 100%\"\n                       chart-id=\"blue-bar-chart\"\n                       :chart-data=\"blueBarChart.chartData\"\n                       :gradient-stops=\"blueBarChart.gradientStops\"\n                       :extra-options=\"blueBarChart.extraOptions\">\n            </bar-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.completedTasks')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-send text-success \"></i> 12,100K</h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        chart-id=\"green-line-chart\"\n                        :chart-data=\"greenLineChart.chartData\"\n                        :gradient-stops=\"greenLineChart.gradientStops\"\n                        :extra-options=\"greenLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-md-12\">\n        <card type=\"tasks\" :header-classes=\"{'text-right': isRTL}\">\n          <template slot=\"header\">\n            <h6 class=\"title d-inline\">{{$t('dashboard.tasks', {count: 5})}}</h6>\n            <p class=\"card-category d-inline\">{{$t('dashboard.today')}}</p>\n            <base-dropdown menu-on-right=\"\"\n                           tag=\"div\"\n                           title-classes=\"btn btn-link btn-icon\"\n                           aria-label=\"Settings menu\"\n                           :class=\"{'float-left': isRTL}\">\n              <i slot=\"title\" class=\"tim-icons icon-settings-gear-63\"></i>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.action')}}</a>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.anotherAction')}}</a>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.somethingElse')}}</a>\n            </base-dropdown>\n          </template>\n          <div class=\"table-full-width table-responsive\">\n            <task-list></task-list>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-6 col-md-12\">\n        <card class=\"card\" :header-classes=\"{'text-right': isRTL}\">\n          <h4 slot=\"header\" class=\"card-title\">{{$t('dashboard.simpleTable')}}</h4>\n          <div class=\"table-responsive\">\n            <user-table></user-table>\n          </div>\n        </card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import LineChart from '@/components/Charts/LineChart';\n  import BarChart from '@/components/Charts/BarChart';\n  import * as chartConfigs from '@/components/Charts/config';\n  import TaskList from './Dashboard/TaskList';\n  import UserTable from './Dashboard/UserTable';\n  import config from '@/config';\n\n  export default {\n    components: {\n      LineChart,\n      BarChart,\n      TaskList,\n      UserTable\n    },\n    data() {\n      return {\n        bigLineChart: {\n          allData: [\n            [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n            [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n            [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n          ],\n          activeIndex: 0,\n          chartData: {\n            datasets: [{ }],\n            labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n          },\n          extraOptions: chartConfigs.purpleChartOptions,\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.4, 0],\n          categories: []\n        },\n        purpleLineChart: {\n          extraOptions: chartConfigs.purpleChartOptions,\n          chartData: {\n            labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              borderColor: config.colors.primary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.primary,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.primary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [80, 100, 70, 80, 120, 80],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.2, 0],\n        },\n        greenLineChart: {\n          extraOptions: chartConfigs.greenChartOptions,\n          chartData: {\n            labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\n            datasets: [{\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80],\n            }]\n          },\n          gradientColors: ['rgba(66,134,121,0.15)', 'rgba(66,134,121,0.0)', 'rgba(66,134,121,0)'],\n          gradientStops: [1, 0.4, 0],\n        },\n        blueBarChart: {\n          extraOptions: chartConfigs.barChartOptions,\n          chartData: {\n            labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\n            datasets: [{\n              label: \"Countries\",\n              fill: true,\n              borderColor: config.colors.info,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              data: [53, 20, 10, 80, 100, 45],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.4, 0],\n        }\n      }\n    },\n    computed: {\n      enableRTL() {\n        return this.$route.query.enableRTL;\n      },\n      isRTL() {\n        return this.$rtl.isRTL;\n      },\n      bigLineChartCategories() {\n        return this.$t('dashboard.chartCategories');\n      }\n    },\n    methods: {\n      initBigChart(index) {\n        let chartData = {\n          datasets: [{\n            fill: true,\n            borderColor: config.colors.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.bigLineChart.allData[index]\n          }],\n          labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n        }\n        this.$refs.bigChart.updateGradients(chartData);\n        this.bigLineChart.chartData = chartData;\n        this.bigLineChart.activeIndex = index;\n      }\n    },\n    mounted() {\n      this.i18n = this.$i18n;\n      if (this.enableRTL) {\n        this.i18n.locale = 'ar';\n        this.$rtl.enableRTL();\n      }\n      this.initBigChart(0);\n    },\n    beforeDestroy() {\n      if (this.$rtl.isRTL) {\n        this.i18n.locale = 'en';\n        this.$rtl.disableRTL();\n      }\n    }\n  };\n</script>\n<style>\n</style>\n"]}]}